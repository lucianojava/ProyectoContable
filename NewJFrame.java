/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucho
 */
public class NewJFrame extends javax.swing.JFrame {
    private SistemaGeneral sistemaGeneral = new SistemaGeneral();  
    private ArrayList<Transaccion> transaccionesAgregarAsiento = new ArrayList<Transaccion>();
    
    
    
    
    
    
    
    
    
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton8 = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnCrearAsientoDiario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibroDiario = new javax.swing.JTable();
        btnVistaCompletaDiario = new javax.swing.JButton();
        btnBuscarPorFechaDiario = new javax.swing.JButton();
        txtFechaBuscarDiarioDesde = new javax.swing.JTextField();
        btnFiltrarPorCuentaDiario = new javax.swing.JButton();
        txtCodigoCuentaFiltrarDiario = new javax.swing.JTextField();
        btnGuardarArchivoDiario = new javax.swing.JButton();
        btnCargarArchivoDiario = new javax.swing.JButton();
        btnNuevoArchivoDiario = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnLimpiarTabla = new javax.swing.JButton();
        txtFechaBuscarDiarioHasta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLibroMayor = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        txtBuscarCuenta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCrearAsiento = new javax.swing.JTable();
        btnConfirmarCrearAsiento = new javax.swing.JButton();
        btnCancelarCrearAsiento = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        labelConcepto = new javax.swing.JLabel();
        labelMonto = new javax.swing.JLabel();
        txtConcepto = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        btnAgregarTransaccion = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelFechaCierreAsiento = new javax.swing.JLabel();
        txtFechaCierreAsiento = new javax.swing.JTextField();
        jLabelCodigoCuenta = new javax.swing.JLabel();
        txtCodigoCuenta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnPruebas = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        jButton8.setText("jButton8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 0, -1, -1));

        btnCrearAsientoDiario.setText("Crear Asiento");
        btnCrearAsientoDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearAsientoDiarioActionPerformed(evt);
            }
        });

        tablaLibroDiario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "N de Cuenta", "Concepto", "Debe", "Haber", "N de Asiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaLibroDiario);

        btnVistaCompletaDiario.setText("Vista Completa");
        btnVistaCompletaDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVistaCompletaDiarioActionPerformed(evt);
            }
        });

        btnBuscarPorFechaDiario.setText("Buscar Por Fecha");
        btnBuscarPorFechaDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorFechaDiarioActionPerformed(evt);
            }
        });

        txtFechaBuscarDiarioDesde.setText("        DESDE");
        txtFechaBuscarDiarioDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaBuscarDiarioDesdeActionPerformed(evt);
            }
        });

        btnFiltrarPorCuentaDiario.setText("Filtrar por cuenta");
        btnFiltrarPorCuentaDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarPorCuentaDiarioActionPerformed(evt);
            }
        });

        txtCodigoCuentaFiltrarDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoCuentaFiltrarDiarioActionPerformed(evt);
            }
        });

        btnGuardarArchivoDiario.setText("Guardar");

        btnCargarArchivoDiario.setText("Cargar");

        btnNuevoArchivoDiario.setText("Nuevo Archivo");

        jLabel5.setText("(codigo de cuenta)");

        btnLimpiarTabla.setText("Limpiar Tabla");
        btnLimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarTablaActionPerformed(evt);
            }
        });

        txtFechaBuscarDiarioHasta.setText("        HASTA");
        txtFechaBuscarDiarioHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaBuscarDiarioHastaActionPerformed(evt);
            }
        });

        jLabel2.setText("dd/MM/aaaa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFiltrarPorCuentaDiario)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtCodigoCuentaFiltrarDiario)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVistaCompletaDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCrearAsientoDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevoArchivoDiario)
                            .addComponent(btnCargarArchivoDiario)
                            .addComponent(btnGuardarArchivoDiario)
                            .addComponent(btnLimpiarTabla)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscarPorFechaDiario)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel2)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFechaBuscarDiarioHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFechaBuscarDiarioDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCrearAsientoDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVistaCompletaDiario)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscarPorFechaDiario)
                            .addComponent(txtFechaBuscarDiarioDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCodigoCuentaFiltrarDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFiltrarPorCuentaDiario)))
                            .addComponent(txtFechaBuscarDiarioHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiarTabla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGuardarArchivoDiario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCargarArchivoDiario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNuevoArchivoDiario)
                        .addGap(85, 85, 85))))
        );

        jTabbedPanePrincipal.addTab("Libro Diario", jPanel1);

        tablaLibroMayor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "N de Asiento", "N de Cuenta", "Cuenta", "Debe", "Haber", "Saldo"
            }
        ));
        jScrollPane2.setViewportView(tablaLibroMayor);

        jButton5.setText("Vista Completa");

        jButton6.setText("Buscar Cuenta");

        jButton7.setText("Saldo Por Cuentas");

        jLabel3.setText("( Por codigo )");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(txtBuscarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(jButton7)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTabbedPanePrincipal.addTab("Libro Mayor", jPanel2);

        tablaCrearAsiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Fecha", "N de Asiento", "N de Cuenta", "Concepto", "Debe", "Haber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaCrearAsiento);

        btnConfirmarCrearAsiento.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        btnConfirmarCrearAsiento.setText("Confirmar");
        btnConfirmarCrearAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarCrearAsientoActionPerformed(evt);
            }
        });

        btnCancelarCrearAsiento.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        btnCancelarCrearAsiento.setText("Cancelar");
        btnCancelarCrearAsiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCrearAsientoActionPerformed(evt);
            }
        });

        labelConcepto.setText("Concepto:");

        labelMonto.setText("Monto:");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Debe");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Haber");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        btnAgregarTransaccion.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnAgregarTransaccion.setText("Agregar Transacción");
        btnAgregarTransaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarTransaccionActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de Monto:");

        jLabelFechaCierreAsiento.setText("Fecha cierre de Asiento:");

        jLabelCodigoCuenta.setText("Codigo de la cuenta:");

        jLabel1.setText("dd/mm/aaaa");

        btnPruebas.setText("Probar");
        btnPruebas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPruebasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelFechaCierreAsiento)
                                            .addComponent(labelConcepto)
                                            .addComponent(jLabelCodigoCuenta)
                                            .addComponent(labelMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtFechaCierreAsiento, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                            .addComponent(txtMonto, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCodigoCuenta, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtConcepto))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButton1)
                                            .addComponent(jLabel4)
                                            .addComponent(jRadioButton2)
                                            .addComponent(jLabel1)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnConfirmarCrearAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(btnPruebas)
                                                .addGap(40, 40, 40)
                                                .addComponent(btnCancelarCrearAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(btnAgregarTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(56, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnConfirmarCrearAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCancelarCrearAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPruebas))
                        .addGap(27, 27, 27)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFechaCierreAsiento)
                            .addComponent(txtFechaCierreAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelConcepto)
                                    .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCodigoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCodigoCuenta))
                                .addGap(11, 11, 11))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(5, 5, 5)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMonto)
                            .addComponent(jRadioButton2))
                        .addGap(38, 38, 38)
                        .addComponent(btnAgregarTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        jTabbedPanePrincipal.addTab("Crear Asiento", jPanel3);

        getContentPane().add(jTabbedPanePrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 540));
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void btnCrearAsientoDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearAsientoDiarioActionPerformed
        jTabbedPanePrincipal.setSelectedIndex(2);
        //NewJFrameCrearAsiento nuevoAsiento = new NewJFrameCrearAsiento();
        //nuevoAsiento.setVisible(true);
    }//GEN-LAST:event_btnCrearAsientoDiarioActionPerformed
    
    
    private boolean validarTransaccion(Transaccion transaccion){  // Mira si el asiento actual es igual o posterior al asiento anterior
        if(sistemaGeneral.getAsientos().isEmpty()){  // En el caso de que sea el primer asiento
            return true;
        }
        else{
            Asiento asientoAnterior = sistemaGeneral.getUltimoAsiento();  // Y que la fecha de las nuevas transacciones sea anterior o igual a cierre de asiento
            LocalDate fechaCierreAsientoAnterior = asientoAnterior.getFecha();
            if(fechaCierreAsientoAnterior.minusDays(1).isBefore(transaccion.getFecha())){
                return true;
            }
            else{
                return false;
            }
        }
    }
    
    
    
    private void btnAgregarTransaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTransaccionActionPerformed
        Transaccion transaccion;
        if(validarDebeHaber()){  // Toma los datos del text field
            String str = txtFechaCierreAsiento.getText();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dateTime = LocalDate.parse(str, formatter);
            transaccion = new Transaccion(contenidoValidarDebeHaber(),dateTime ,txtConcepto.getText(),Integer.parseInt(txtMonto.getText()),getnumeroDeAsientos()+1,Integer.parseInt(txtCodigoCuenta.getText()));
            if (validarTransaccion(transaccion)){
                sistemaGeneral.agregarTransaccion(contenidoValidarDebeHaber(),dateTime ,txtConcepto.getText(),Integer.parseInt(txtMonto.getText()),getnumeroDeAsientos()+1,Integer.parseInt(txtCodigoCuenta.getText()));
                transaccionesAgregarAsiento.add(transaccion);
            }   
            else{
                JOptionPane.showMessageDialog(null,"Arregle la fecha incumple la normativa");
                txtFechaCierreAsiento.setText("");
                return;
            }
        } 
        //transaccionesAgregarAsiento.sort((o1,o2) -> o1.compareTo(o2));  // Ordeno los objetos del array segun su fecha m -> M
        mostrarCrearAsiento();
        txtCodigoCuenta.setText("");
        txtConcepto.setText("");  // limpiar campo de llenado txtConcepto, txtFecha y txtMonto.
        txtMonto.setText("");
    }//GEN-LAST:event_btnAgregarTransaccionActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void btnCancelarCrearAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCrearAsientoActionPerformed
        jTabbedPanePrincipal.setSelectedIndex(0);

        transaccionesAgregarAsiento.clear();
        sistemaGeneral.limpiarTransaccionesTemporales();
        limpiarTablaCrearAsiento();
    }//GEN-LAST:event_btnCancelarCrearAsientoActionPerformed

    private LocalDate asignarFechaAsiento(){  // Inicializa atributo fecha cierre asiento nuevo
        String str = txtFechaCierreAsiento.getText();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dateTime = LocalDate.parse(str, formatter);
        return dateTime;  
    }
    
    private boolean validarFechaConfirmar(LocalDate fechaCierreAsiento){  // Compruebo que la fecha de cierre del asiento anterior sea previa a las de las nuevas transacciones
        if(sistemaGeneral.getAsientos().isEmpty()){  // En el caso de que sea el primer asiento
            return true;
        }
        else{
            if(fechaCierreAsiento.plusDays(1).isAfter(sistemaGeneral.fechaUltimoAsiento())){
                //fechaCierreAsiento.isBefore(sistemaGeneral.fechaUltimoAsiento()minusDays(1))
                return true;
            }
            else{
                JOptionPane.showMessageDialog(null,"Las fechas del asiento no son correctas");
                return false;
            }
        }
    }
    
    private void btnConfirmarCrearAsientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarCrearAsientoActionPerformed
        
        LocalDate fechaCreacion = asignarFechaAsiento();  // Fecha de asiento nuevo a agregar  
        // ANDA
        if(validarFechaConfirmar(fechaCreacion) && debeIgualHaber()){  // Mira que las fechas nuevas sean posteriores a las fechas de los asientos anteriores
            int numeroAsiento = sistemaGeneral.numAsientos() + 1;
            //Asiento asiento = new Asiento(transaccionesAgregarAsiento,fechaCreacion,numeroAsiento);
            sistemaGeneral.agregarAsiento(fechaCreacion, numeroAsiento);
            //sistemaGeneral.crearAsiento(); // De prueba: crea un asiento por defecto
            
            JOptionPane.showMessageDialog(null,"Se ha agregado con exito el asiento, numero: "+ numeroAsiento);
        }
        else{
            sistemaGeneral.limpiarTransaccionesTemporales();
        }
        //System.out.println(transaccionesAgregarAsiento.get(0).getMonto());  // Probar transacciones
        sistemaGeneral.limpiarTransaccionesTemporales();
        transaccionesAgregarAsiento.clear(); // Dejarlo limpio para nuevo asiento
        jTabbedPanePrincipal.setSelectedIndex(0);
        limpiarTablaCrearAsiento();
        mostrarCrearAsiento();
    }//GEN-LAST:event_btnConfirmarCrearAsientoActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    /* BASURA 
    private int numeroDeFilasDiarioCompleto(){
        int cantidad =0;
        for (Asiento asiento : sistemaGeneral.getAsientos()){
            cantidad += asiento.getCantTransacciones();
        }
        return cantidad;  
    }
    */
    
    public void limpiarTablaLibroDiario(){
        ArrayList<Transaccion> tran = cargarFilasVistaCompletaDiario();
        Object matriz[][] = new Object[tran.size()][6];
        for (int i =0 ; i < tran.size() ; i++){
            matriz[i][0] = null;
            matriz[i][1] = null;
            matriz[i][2] = null;
            matriz[i][3] = null;
            if (transaccionesAgregarAsiento.get(i).getDebeHaber()){
                matriz[i][4] = null;
            }
            else{
                matriz[i][5] = null;
            }
        }
        tablaLibroDiario.setModel(new javax.swing.table.DefaultTableModel(
            matriz,
            new String [] {
                "Fecha", "N de Cuenta", "Concepto", "Debe", "Haber", "N de Asiento"
            }
        )); 
    }
    
    public ArrayList<Transaccion> cargarFilasVistaCompletaDiario(){
        ArrayList<Transaccion> transacciones = new ArrayList<Transaccion>();
        transacciones = sistemaGeneral.retornoFilasVistaCompletaDiario();
        return transacciones;
    }
        
    private ArrayList<Transaccion> cargarFilasPorFechaDiario(LocalDate fechaDesde, LocalDate fechaHasta){
        ArrayList<Transaccion> transacciones = new ArrayList<Transaccion>();
        transacciones = sistemaGeneral.retornoFilasPorFechaDiario(fechaDesde,fechaHasta);
        return transacciones;   
    }
    
    private ArrayList<Transaccion> cargarFilasPorCuentaDiario(int codigo){
        ArrayList<Transaccion> transacciones = new ArrayList<Transaccion>();
        transacciones = sistemaGeneral.retornoFilasPorCuentaDiario(codigo);
        return transacciones;
    }
    
    public void mostrarLibroDiario(ArrayList<Transaccion> transacciones){   // Mostrar General
        Object matriz[][]= new Object[transacciones.size()][6];
        for (int i = 0; i < transacciones.size();i++){
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            matriz[i][0] = transacciones.get(i).getFecha().format(formatter);
            matriz[i][1] = transacciones.get(i).getCodigoNumerico();
            matriz[i][2] = transacciones.get(i).getConcepto();
            matriz[i][5] = transacciones.get(i).getNumAsiento(); //
            if (transacciones.get(i).getDebeHaber()){
                matriz[i][3] = transacciones.get(i).getMonto();
            }
            else{
                matriz[i][4] = transacciones.get(i).getMonto();

            }
        }
        tablaLibroDiario.setModel(new javax.swing.table.DefaultTableModel(
            matriz,
            new String [] {
                "Fecha", "N de Cuenta", "Concepto", "Debe", "Haber", "N de Asiento"
            }
        ));
    }
        
    private void btnVistaCompletaDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVistaCompletaDiarioActionPerformed
        if(sistemaGeneral.getAsientos().isEmpty()){
            JOptionPane.showMessageDialog(null,"No hay asientos para mostrar");
            return;
        }
        mostrarLibroDiario(cargarFilasVistaCompletaDiario());

        
    }//GEN-LAST:event_btnVistaCompletaDiarioActionPerformed

    private void txtFechaBuscarDiarioDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaBuscarDiarioDesdeActionPerformed
        
    }//GEN-LAST:event_txtFechaBuscarDiarioDesdeActionPerformed
    
    private boolean miroDesde(String desde){
        Set caracteres = new HashSet();
        caracteres.add('0');
        caracteres.add('1');
        caracteres.add('2');
        caracteres.add('3');
        caracteres.add('4');
        caracteres.add('5');
        caracteres.add('6');
        caracteres.add('7');
        caracteres.add('8');
        caracteres.add('9');
        if (caracteres.contains(desde.charAt(0)) && caracteres.contains(desde.charAt(1))
                && caracteres.contains(desde.charAt(3)) && caracteres.contains(desde.charAt(4))
                && caracteres.contains(desde.charAt(6)) && caracteres.contains(desde.charAt(7))&&
                caracteres.contains(desde.charAt(8)) && caracteres.contains(desde.charAt(9)) &&
                desde.charAt(2) == '/' && desde.charAt(5) == '/' ){
            return true;
        }
        JOptionPane.showMessageDialog(null,"Error fecha desde");

        return false;

    }
    
    private boolean miroHasta(String  hasta){
        Set caracteres = new HashSet();
        caracteres.add('0');
        caracteres.add('1');
        caracteres.add('2');
        caracteres.add('3');
        caracteres.add('4');
        caracteres.add('5');
        caracteres.add('6');
        caracteres.add('7');
        caracteres.add('8');
        caracteres.add('9');
        if (caracteres.contains(hasta.charAt(0)) && caracteres.contains(hasta.charAt(1))
                && caracteres.contains(hasta.charAt(3)) && caracteres.contains(hasta.charAt(4))
                && caracteres.contains(hasta.charAt(6)) && caracteres.contains(hasta.charAt(7))&&
                caracteres.contains(hasta.charAt(8)) && caracteres.contains(hasta.charAt(9)) &&
                hasta.charAt(2) == '/' && hasta.charAt(5) == '/' ){
            return true;
        }
        JOptionPane.showMessageDialog(null,"Error fecha hasta");

        return false;
    }
        
    private boolean formatoFecha(String desde, String hasta){
        if (desde.length() != 10 || hasta.length() != 10){
            return false;
        }
        else{
            if (miroDesde(desde) || miroHasta(hasta)){
                return true;
            }
            else{
                return false;
            }
        }
    }
    
    private void btnBuscarPorFechaDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorFechaDiarioActionPerformed
        String fechaDesdeString = txtFechaBuscarDiarioDesde.getText();
        String fechaHastaString = txtFechaBuscarDiarioHasta.getText();
        if(sistemaGeneral.getAsientos().isEmpty()){
            JOptionPane.showMessageDialog(null,"No hay asientos para mostrar");
            return;
        }
        if (fechaDesdeString.equals("") || fechaHastaString.equals("")){
            JOptionPane.showMessageDialog(null,"Ingrese fechas en los campos");
            return;            
        }
        if (!formatoFecha(fechaDesdeString,fechaHastaString)){
            JOptionPane.showMessageDialog(null,"Error formato fechas");
            return;
        }
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate fechaDesde = LocalDate.parse(fechaDesdeString, formatter);
        LocalDate fechaHasta = LocalDate.parse(fechaHastaString,formatter);
        txtFechaBuscarDiarioDesde.setText("");
        txtFechaBuscarDiarioHasta.setText("");
        if(sistemaGeneral.getAsientos().isEmpty()){
            JOptionPane.showMessageDialog(null,"No hay asientos para mostrar");
            return;
        }
        mostrarLibroDiario(cargarFilasPorFechaDiario(fechaDesde,fechaHasta));
    }//GEN-LAST:event_btnBuscarPorFechaDiarioActionPerformed

    private void btnFiltrarPorCuentaDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarPorCuentaDiarioActionPerformed
        int codigo = Integer.parseInt(txtCodigoCuentaFiltrarDiario.getText());
        if(sistemaGeneral.getAsientos().isEmpty()){
            JOptionPane.showMessageDialog(null,"No hay asientos para mostrar");
            return;
        }
        mostrarLibroDiario(cargarFilasPorCuentaDiario(codigo));
    }//GEN-LAST:event_btnFiltrarPorCuentaDiarioActionPerformed

    private void btnLimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarTablaActionPerformed
        limpiarTablaLibroDiario();


    }//GEN-LAST:event_btnLimpiarTablaActionPerformed

    private void btnPruebasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPruebasActionPerformed
        System.out.println("Imprimo los montos");
        for (Asiento asiento : sistemaGeneral.getAsientos()){
            for (Transaccion transa: asiento.getTransacciones()){
                System.out.println(transa.getMonto());
            }
        }
        System.out.println("esta vacio general-> asientos?: " +sistemaGeneral.getAsientos().isEmpty());
        System.out.println("Esta vacio transaccionTemporal?: "+ sistemaGeneral.getTransaccionesTemporales());
        System.out.println("Esta vacio transaccionesAgregarAsiento aca?: " + this.getTransaccionesAgregarAsiento().isEmpty());
        //sistemaGeneral.crearAsiento();
        //System.out.println( sistemaGeneral.getAsientos().get(0).getTransacciones().get(0).getMonto());
    }//GEN-LAST:event_btnPruebasActionPerformed

    private void txtCodigoCuentaFiltrarDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoCuentaFiltrarDiarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoCuentaFiltrarDiarioActionPerformed

    private void txtFechaBuscarDiarioHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaBuscarDiarioHastaActionPerformed
        
    }//GEN-LAST:event_txtFechaBuscarDiarioHastaActionPerformed

    public ArrayList<Transaccion> getTransaccionesAgregarAsiento() {
        return transaccionesAgregarAsiento;
    }

    public void setTransaccionesAgregarAsiento(ArrayList<Transaccion> transaccionesAgregarAsiento) {
        this.transaccionesAgregarAsiento = transaccionesAgregarAsiento;
    }
    
    public void limpiarTablaCrearAsiento(){
        Object matriz[][]= new Object[transaccionesAgregarAsiento.size()][6];
        for (int i = 0; i < transaccionesAgregarAsiento.size();i++){
            matriz[i][0] = null;
            matriz[i][1] = null;
            matriz[i][2] = null;
            matriz[i][3] = null;
            if (transaccionesAgregarAsiento.get(i).getDebeHaber()){
                matriz[i][4] = null;
            }
            else{
                matriz[i][5] = null;

            }
        }
        tablaCrearAsiento.setModel(new javax.swing.table.DefaultTableModel(
            matriz,
            new String [] {
                "Fecha", "N de Asiento", "N de Cuenta", "Concepto", "Debe", "Haber"
            }
        ));
    }
    
    public void mostrarCrearAsiento(){  //Llena la tablaCrearAsiento con los datos para mostrarlos por pantalla. 
        Object matriz[][]= new Object[transaccionesAgregarAsiento.size()][6];
        for (int i = 0; i < transaccionesAgregarAsiento.size();i++){
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

            matriz[i][0] = transaccionesAgregarAsiento.get(i).getFecha().format(formatter);
            matriz[i][1] = transaccionesAgregarAsiento.get(i).getNumAsiento();
            matriz[i][2] = transaccionesAgregarAsiento.get(i).getCodigoNumerico();
            matriz[i][3] = transaccionesAgregarAsiento.get(i).getConcepto();
            if (transaccionesAgregarAsiento.get(i).getDebeHaber()){
                matriz[i][4] = transaccionesAgregarAsiento.get(i).getMonto();
            }
            else{
                matriz[i][5] = transaccionesAgregarAsiento.get(i).getMonto();

            }
        }
        tablaCrearAsiento.setModel(new javax.swing.table.DefaultTableModel(
            matriz,
            new String [] {
                "Fecha", "N de Asiento", "N de Cuenta", "Concepto", "Debe", "Haber"
            }
        ));
    }
    
    public int getnumeroDeAsientos(){
        return sistemaGeneral.numAsientos();
    }
       
    public boolean validarDebeHaber(){  //ANDA   Se asegura de que se seleccione alguno de las dos opciones
        if (jRadioButton1.isSelected() || jRadioButton2.isSelected()){
            JOptionPane.showMessageDialog(null,"Has selecionado una opcion");
            return true;
        }
        else{
            JOptionPane.showMessageDialog(null,"Seleccione el tipo de monto(*obligatorio)");
            return false;
        }
        
    }
    
    private boolean contenidoValidarDebeHaber(){  // Determina de que tipo de monto esta compuesto
        if(jRadioButton1.isSelected()){
            return true;
        }
        else{            
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarTransaccion;
    private javax.swing.JButton btnBuscarPorFechaDiario;
    private javax.swing.JButton btnCancelarCrearAsiento;
    private javax.swing.JButton btnCargarArchivoDiario;
    private javax.swing.JButton btnConfirmarCrearAsiento;
    private javax.swing.JButton btnCrearAsientoDiario;
    private javax.swing.JButton btnFiltrarPorCuentaDiario;
    private javax.swing.JButton btnGuardarArchivoDiario;
    private javax.swing.JButton btnLimpiarTabla;
    private javax.swing.JButton btnNuevoArchivoDiario;
    private javax.swing.JButton btnPruebas;
    private javax.swing.JButton btnVistaCompletaDiario;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCodigoCuenta;
    private javax.swing.JLabel jLabelFechaCierreAsiento;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    private javax.swing.JLabel labelConcepto;
    private javax.swing.JLabel labelMonto;
    private javax.swing.JTable tablaCrearAsiento;
    private javax.swing.JTable tablaLibroDiario;
    private javax.swing.JTable tablaLibroMayor;
    private javax.swing.JTextField txtBuscarCuenta;
    private javax.swing.JTextField txtCodigoCuenta;
    private javax.swing.JTextField txtCodigoCuentaFiltrarDiario;
    private javax.swing.JTextField txtConcepto;
    private javax.swing.JTextField txtFechaBuscarDiarioDesde;
    private javax.swing.JTextField txtFechaBuscarDiarioHasta;
    private javax.swing.JTextField txtFechaCierreAsiento;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables

    private boolean debeIgualHaber() {
        int debe = 0 ;
        int haber = 0;
        for (Transaccion transac : transaccionesAgregarAsiento ){
            if ( transac.getDebeHaber() == true){
                debe += transac.getMonto();
            }
            else{
                haber += transac.getMonto();
            }
        }
        if (debe == haber){
            return true;
        }
        else{
            JOptionPane.showMessageDialog(null,"No cumple norma contable: partida doble.");
            return false;
        }
        
        
    }

    
}
